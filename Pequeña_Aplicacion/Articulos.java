/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pequeña_Aplicacion;

import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author doort
 */
public class Articulos extends javax.swing.JFrame {
    static javax.swing.JFrame padre;
    int aux=1;

    /**
     * Creates new form Altas2
     */
    public Articulos(javax.swing.JFrame padre) {
        Articulos.padre = padre;
        enableEvents(java.awt.AWTEvent.WINDOW_EVENT_MASK);
        initComponents();
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jScrollPane2.setVisible(false);
        this.setBounds(0, 0, 487, 450);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestión de Almacenes - Articulos");

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.setEnabled(false);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Stock");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setMnemonic('A');
        jButton1.setText("Aceptar");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setMnemonic('C');
        jButton2.setText("Cancelar");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField4.setEnabled(false);
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Precio compra ");

        jTextField6.setEnabled(false);
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Precio venta ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Descripción ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Stock mínimo ");

        jTextField5.setEnabled(false);
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setMnemonic('s');
        jButton3.setText("Salir");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Código");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 259, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setMnemonic('m');
        jMenu1.setText("Mantenimiento");

        jMenuItem1.setMnemonic('a');
        jMenuItem1.setText("Altas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setMnemonic('b');
        jMenuItem2.setText("Bajas");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setMnemonic('m');
        jMenuItem3.setText("Modificaciones");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator1);

        jMenuItem4.setMnemonic('v');
        jMenuItem4.setText("Volver");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('c');
        jMenu2.setText("Consultas");

        jMenu3.setMnemonic('p');
        jMenu3.setText("Por Código");

        jMenuItem7.setMnemonic('c');
        jMenuItem7.setText("Por código");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setMnemonic('e');
        jMenuItem8.setText("Entre código");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenu2.add(jMenu3);

        jMenuItem9.setMnemonic('c');
        jMenuItem9.setText("Por Código");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(159, 159, 159))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(226, 226, 226)
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton3)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                                .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                    .addGap(58, 58, 58)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(1, 1, 1)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addComponent(jButton3))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==10) {
            switch(aux)
            {
                case 1:
                if (jTextField1.getText().length()!=5) {
                    JOptionPane.showConfirmDialog(this,"El Código debe tener 5 caracteres.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
                } else {
                try {
                    if (GestionDeAlmacen.existe(jTextField1.getText(),"Articulos")) {
                        JOptionPane.showConfirmDialog(this, "Código ya existente. Imposible dar de alta este código.", "Código Erróneo", JOptionPane.ERROR_MESSAGE);
                    } else {
                        actDesCasillas(1);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                    break;
                case 2:
                if (jTextField1.getText().length()!=5) {
                    JOptionPane.showConfirmDialog(this,"El Código debe tener 5 caracteres.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
                } else {                        
                try {
                    if (GestionDeAlmacen.existe(jTextField1.getText(),"Articulos")) {
                       /*codigo para mostrar*/
                       ResultSet rs=GestionDeAlmacen.mostrar(jTextField1.getText(),"Articulos");
                       jTextField2.setText(rs.getString("stock"));
                       jTextField4.setText(rs.getString("stock_mínimo"));
                       jTextField5.setText(rs.getString("precio_compra"));
                       jTextField6.setText(rs.getString("precio_venta"));
                       jTextArea1.setText(rs.getString("descripción"));
                       jButton1.setEnabled(true);
                       jButton2.setEnabled(true);
                       jButton3.setEnabled(true);
                    } else {
                         JOptionPane.showConfirmDialog(this,"Código Erróneo", "Código no existente. Imposible dar de baja este código.", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                }
                } 
                    break;
                case 3:
                    if (jTextField1.getText().length()!=5) {
                    JOptionPane.showConfirmDialog(this,"El Código debe tener 5 caracteres.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
                } else {
                try {
                    if (GestionDeAlmacen.existe(jTextField1.getText(),"Articulos")) {
                       /*codigo para mostrar*/
                       ResultSet rs=GestionDeAlmacen.mostrar(jTextField1.getText(),"Articulos");
                       jTextField1.setEnabled(false);
                       jTextField2.setText(rs.getString("stock"));
                       jTextField4.setText(rs.getString("stock_mínimo"));
                       jTextField5.setText(rs.getString("precio_compra"));
                       jTextField6.setText(rs.getString("precio_venta"));
                       jTextArea1.setText(rs.getString("descripción"));
                       actDesCasillas(1);
                    } else {
                         JOptionPane.showConfirmDialog(this,"Código Erróneo", "Código no existente.", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                }
                    }
                    break;
                default:
                    JOptionPane.showConfirmDialog(this,"Error fatal.", "La apliación es irresoluble, llamar al tecnico.", JOptionPane.ERROR_MESSAGE);
                   
            }
            jTextField2.grabFocus();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==10){
            jTextField4.grabFocus();
                    }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().length()!=5) {
            JOptionPane.showConfirmDialog(this,"El Código debe tener 5 caracteres.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
        }else{
            if (!jTextField2.getText().matches("[0-9]{0,2}.[0-9]{0,2}")) {
                JOptionPane.showConfirmDialog(this,"El Stock no puede estar vacío y debe ser en formato númerico.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
            }else{
                    if (!jTextField4.getText().matches("[0-9]{0,2}.[0-9]{0,2}")) {
                        JOptionPane.showConfirmDialog(this,"El Stock mínimo no puede estar vacío, ni ser letras.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
                    }else{
                        if (!jTextField5.getText().matches("[0-9]{0,2}.[0-9]{0,2}")) {
                            JOptionPane.showConfirmDialog(this,"El Precio compra no puede estar vacío, ni ser letras.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
                        }else{
                            if (jTextField6.getText().equals("[0-9]{0,2}.[0-9]{0,2}")) {
                                JOptionPane.showConfirmDialog(this,"El Precio venta no puede estar vacío, ni ser letras.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
                            }else{
                                if (jTextArea1.getText().length()>26) {
                                    JOptionPane.showConfirmDialog(this,"La descripción debe se un máximo de 25 caracteres.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
                                }else{
                                    
                                                            switch(aux)
                                                            {
                                                                case 1:
                                                                    ArrayList <String> al=new ArrayList <String>();
                                                                    al.add(jTextField1.getText());
                                                                    al.add(jTextArea1.getText());
                                                                    al.add(jTextField2.getText());
                                                                    al.add(jTextField4.getText());
                                                                    al.add(jTextField5.getText());
                                                                    al.add(jTextField6.getText());
                                                                    try {
                                                                        GestionDeAlmacen.altas2(al, "Articulos");
                                                                        JOptionPane.showConfirmDialog(this, "Alta realizada.", "Alta Cliente.",
                                                                        JOptionPane.CLOSED_OPTION);
                                                                        actDesCasillas(3);
                                                                    } catch (SQLException ex) {
                                                                        JOptionPane.showConfirmDialog(this,"Ocurrio un error al dar de alta al ciente, por favor intentelo de nuevo o reinicie la aplicación.", "Error en altas", JOptionPane.ERROR_MESSAGE);
                                                                        Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                                                                    }
                                                                    break;
                                                                case 2:
                                                                    int res=JOptionPane.showConfirmDialog(this, "¿Esta seguro de dar de baja "
                                                                            + "al cliente con código"+jTextField1.getText()+"?", "Baja Cliente.",
                                                                    JOptionPane.YES_NO_CANCEL_OPTION);
                                                                    if (res==0) {
                                                                        try {
                                                                            GestionDeAlmacen.bajas(jTextField1.getText(), "Articulos");
                                                                            JOptionPane.showConfirmDialog(this, "Baja realizada.", "Baja Cliente.",
                                                                            JOptionPane.CLOSED_OPTION);
                                                                            actDesCasillas(3);
                                                                        } catch (SQLException ex) {
                                                                            JOptionPane.showConfirmDialog(this,"Ocurrio un error al dar de baja al ciente, por favor intentelo de nuevo o reinicie la aplicación.", "Error en bajas", JOptionPane.ERROR_MESSAGE);
                                                                            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                                                                        }
                                                                    } else {
                                                                        ;
                                                                    }
                                                                    break;
                                                                case 3:
                                                                    int aux2=0;
                                                                    ResultSet rs=null;
                                                                    int res2=1;
                                                                    
                                                                    try {
                                                                        rs = GestionDeAlmacen.mostrar(jTextField1.getText(), "Articulos");
                                                                        if (!rs.getString("stock").equals(jTextField2.getText()) || !rs.getString("stock_mínimo").equals(jTextField4.getText()) || !rs.getString("precio_compra").equals(jTextField5.getText()) || !rs.getString("precio_venta").equals(jTextField6.getText()) || !rs.getString("descripción").equals(jTextArea1.getText())) {
                                                                        res2=JOptionPane.showConfirmDialog(this, "¿Esta seguro que quieres modificar "
                                                                            + "al cliente con código"+jTextField1.getText()+"?", "Modificación Cliente.",
                                                                            JOptionPane.YES_NO_CANCEL_OPTION);
                                                                        }
                                                                    } catch (SQLException ex) {
                                                                        Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                                                                    }
                                                                    
                                                                    if (res2==0) {
                                                                        try {
                                                                            
                                                                            if (!rs.getString("stock").equals(jTextField2.getText())) {
                                                                                GestionDeAlmacen.modificaciones("stock", jTextField2.getText(), jTextField1.getText(), "Articulos");
                                                                                aux2=1;
                                                                            }
                                                                            if (!rs.getString("stock_mínimo").equals(jTextField4.getText())) {
                                                                                GestionDeAlmacen.modificaciones("stock_mínimo", jTextField4.getText(), jTextField1.getText(), "Articulos");
                                                                                aux2=1;
                                                                            }
                                                                            if (!rs.getString("precio_compra").equals(jTextField5.getText())) {
                                                                                GestionDeAlmacen.modificaciones("precio_compra", jTextField5.getText(), jTextField1.getText(), "Articulos");
                                                                                aux2=1;
                                                                            }
                                                                            if (!rs.getString("precio_venta").equals(jTextField6.getText())) {
                                                                                GestionDeAlmacen.modificaciones("precio_venta", jTextField6.getText(), jTextField1.getText(), "Articulos");
                                                                                aux2=1;
                                                                            }
                                                                            if (!rs.getString("descripción").equals(jTextArea1.getText())) {
                                                                                GestionDeAlmacen.modificaciones("descripción", jTextArea1.getText(), jTextField1.getText(), "Articulos");
                                                                                aux2=1;
                                                                            }
                                                                            JOptionPane.showConfirmDialog(this, "Modificación realizada.", "Modificación Cliente.",
                                                                            JOptionPane.CLOSED_OPTION);
                                                                            actDesCasillas(3);
                                                                        } catch (SQLException ex) {
                                                                            JOptionPane.showConfirmDialog(this,"Ocurrio un error al modificar al ciente, por favor intentelo de nuevo o reinicie la aplicación.", "Error en modificación", JOptionPane.ERROR_MESSAGE);
                                                                            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                                                                        }
                                                                    } else {
                                                                        ;
                                                                    }
                                                                    break;
                                                                default:
                                                                    JOptionPane.showConfirmDialog(this,"Error fatal.", "La apliación es irresoluble, llamar al tecnico.", JOptionPane.ERROR_MESSAGE);

                                                            }
                            }
                        }
                    }
                
            }
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField1.grabFocus();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==10) jTextField5.grabFocus();
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==10) jTextArea1.grabFocus();
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==10) jTextField6.grabFocus();
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        jTextField1.setEnabled(true);
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
        this.setBounds(0, 0, 487, 450);
        aux=1;
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        jTextField1.setEnabled(true);
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
        this.setBounds(0, 0, 487, 450);
        aux=2;
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        jTextField1.setEnabled(true);
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
        this.setBounds(0, 0, 487, 450);
        aux=3;
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        padre.setEnabled(true);
        padre.setVisible(true);
        
        this.dispose();
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextArea1.setText("");
        actDesCasillas(2);
        this.setBounds(0, 0, 487, 450);
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        mostrarCodigo();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        mostrarPorUnicoCodigo();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        mostrarEntreCodigo();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Articulos(padre).setVisible(true);
            }
        });

    }
    protected void processWindowEvent(java.awt.event.WindowEvent e) {/*Este metodo debemos añadirlo completo a mano,
     con el habilitamos de nuevo la primera ventana.*/
        super.processWindowEvent(e);
        if (e.getID() == java.awt.event.WindowEvent.WINDOW_CLOSING) {
        padre.setEnabled(true);
        padre.setVisible(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

    static char calcularLetra(int dni) {
        String caracteres = "TRWAGMYFPDXBNJZSQVHLCKE";
        int resto = dni % 23;
        return caracteres.charAt(resto);
    }
    
    private void actDesCasillas(int i) {
       switch(i)
            {
                case 1:
                    jTextField2.setEnabled(true);
                    jTextField4.setEnabled(true);
                    jTextField5.setEnabled(true);
                    jTextField6.setEnabled(true);
                    jTextArea1.setEnabled(true);
                    jButton1.setEnabled(true);
                    jButton2.setEnabled(true);
                    jButton3.setEnabled(true);
                    break;
                case 2:
                    jTextField1.setEnabled(false);
                    jTextField2.setEnabled(false);
                    jTextField4.setEnabled(false);
                    jTextField5.setEnabled(false);
                    jTextField6.setEnabled(false);
                    jTextArea1.setEnabled(false);
                    jButton1.setEnabled(false);
                    jButton2.setEnabled(false);
                    jButton3.setEnabled(false);
                    break;
                case 3:
                    jTextField1.setText("");
                    jTextField2.setText("");
                    jTextField4.setText("");
                    jTextField5.setText("");
                    jTextField6.setText("");
                    jTextArea1.setText("");
                    jTextField1.setEnabled(true);
                    jTextField2.setEnabled(false);
                    jTextField4.setEnabled(false);
                    jTextField5.setEnabled(false);
                    jTextField6.setEnabled(false);
                    jTextArea1.setEnabled(false);
                    jButton1.setEnabled(false);
                    jButton2.setEnabled(false);
                    jButton3.setEnabled(false);
                    jTextField1.grabFocus();
                    break;
                default:
                    
            }
        
    }

    private void mostrarApellido() {
        /* La siguiente línea se utiliza para descargar el contenido del objeto de
        la memoria. De esta forma, si se pulsa varias veces este botón, el objeto
        es refrescado.
        */
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
        DefaultTableModel modelo = new DefaultTableModel();
        JTable jTable2 = new JTable(modelo){
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Stock");
        modelo.addColumn("Stock mínimo");
        modelo.addColumn("Precio compra");
        modelo.addColumn("Precio venta");
        try {
            ResultSet rs=GestionDeAlmacen.mostrarEspec("SELECT * from Articulos Order by apellidos");
            while (rs.next()) {                
                Object [] fila = new Object[6];
                fila[0] = rs.getString("codigo");
                fila[1] = rs.getString("descripción");
                fila[2] = rs.getString("stock");
                fila[3] = rs.getString("stock_mínimo");
                fila[4] = rs.getString("precio_compra");
                fila[5] = rs.getString("precio_venta");
                modelo.addRow ( fila );
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };*/

        /* El método setSelectionMode recibe un entero que define el tipo
        de selección:

        0 -> Sólo se puede seleccionar una fila.
        1 -> Se pueden seleccionar múltiples filas consecutivas.
        2 -> Se pueden seleccionar múltiples filas aunque no sean
        consecutivas.

        */

        jTable2.setSelectionMode(0);
        jScrollPane2=new JScrollPane(jTable2);
        jTable2.setBounds(0, 0, 459, 219);
        jScrollPane2.setBounds(4, 365, 459, 219);
        this.setBounds(0, 0, 487, 750);
        getContentPane().add(jScrollPane2,null);
        jScrollPane2.setVisible(true);

        /* En las siguientes líneas se activa el método mouseClicked del objeto JTable
        para visualizar los datos del registro seleccionado en el formulario superior.
        */
        
    }

    private void mostrarGraficos() {
        jPanel1.setVisible(false);
        jScrollPane2.setVisible(false);
        try {
            ResultSet rs=GestionDeAlmacen.mostrarEspec("SELECT cp, count(loaclidad) c FROM Articulos GROUP BY cp");
            DefaultPieDataset dataset = new DefaultPieDataset();
            while (rs.next()) {
                dataset.setValue(rs.getString("cp"), Integer.parseInt(rs.getString("c")));
            }
           
            JFreeChart fc = ChartFactory.createPieChart("Grafico de localidad", dataset, true, true, false);
            ChartPanel cp = new ChartPanel(fc);//creamos un panel con la tabla dentro
            jPanel1.add(cp);
            cp.setBounds(0, 0, 459, 259);
            this.setBounds(0, 0, 487, 750);
            jPanel1.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void mostrarCodigo() {
        /* La siguiente línea se utiliza para descargar el contenido del objeto de
        la memoria. De esta forma, si se pulsa varias veces este botón, el objeto
        es refrescado.
        */
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
        DefaultTableModel modelo = new DefaultTableModel();
        JTable jTable2 = new JTable(modelo){
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Stock");
        modelo.addColumn("Stock mínimo");
        modelo.addColumn("Precio compra");
        modelo.addColumn("Precio venta");
        try {
            ResultSet rs=GestionDeAlmacen.mostrarEspec("SELECT * from Articulos Order by codigo");
            while (rs.next()) {                
                Object [] fila = new Object[6];
                fila[0] = rs.getString("codigo");
                fila[1] = rs.getString("descripción");
                fila[2] = rs.getString("stock");
                fila[3] = rs.getString("stock_mínimo");
                fila[4] = rs.getString("precio_compra");
                fila[5] = rs.getString("precio_venta");
                modelo.addRow ( fila );
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };*/

        /* El método setSelectionMode recibe un entero que define el tipo
        de selección:

        0 -> Sólo se puede seleccionar una fila.
        1 -> Se pueden seleccionar múltiples filas consecutivas.
        2 -> Se pueden seleccionar múltiples filas aunque no sean
        consecutivas.

        */

        jTable2.setSelectionMode(0);
        jScrollPane2=new JScrollPane(jTable2);
        jTable2.setBounds(0, 0, 459, 219);
        jScrollPane2.setBounds(new Rectangle(4, 365, 459, 219));
        this.setBounds(0, 0, 487, 750);
        getContentPane().add(jScrollPane2,null);
        jScrollPane2.setVisible(true);

        /* En las siguientes líneas se activa el método mouseClicked del objeto JTable
        para visualizar los datos del registro seleccionado en el formulario superior.
        */
        
    
        
    }

    private void mostrarPorUnicoCodigo() {
        /* La siguiente línea se utiliza para descargar el contenido del objeto de
        la memoria. De esta forma, si se pulsa varias veces este botón, el objeto
        es refrescado.
        */
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
        String st=JOptionPane.showInputDialog("Introduce el código.");
        if (!st.matches("[a-zA-Z_0-9]{5}")) {
            JOptionPane.showConfirmDialog(this,"Para realizar una consulta por un código especifico, "
                    + "\ndebe rellenar el campo un código de 5 caracteres.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
        } else {
            try{
            if (GestionDeAlmacen.existe(st, "Articulos")) {
        
        DefaultTableModel modelo = new DefaultTableModel();
        JTable jTable2 = new JTable(modelo){
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Stock");
        modelo.addColumn("Stock mínimo");
        modelo.addColumn("Precio compra");
        modelo.addColumn("Precio venta");
        try {
            ResultSet rs=GestionDeAlmacen.mostrar(st,"Articulos");
                Object [] fila = new Object[6];
                fila[0] = rs.getString("codigo");
                fila[1] = rs.getString("descripción");
                fila[2] = rs.getString("stock");
                fila[3] = rs.getString("stock_mínimo");
                fila[4] = rs.getString("precio_compra");
                fila[5] = rs.getString("precio_venta");
                modelo.addRow ( fila );
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };*/

        /* El método setSelectionMode recibe un entero que define el tipo
        de selección:

        0 -> Sólo se puede seleccionar una fila.
        1 -> Se pueden seleccionar múltiples filas consecutivas.
        2 -> Se pueden seleccionar múltiples filas aunque no sean
        consecutivas.

        */

        jTable2.setSelectionMode(0);
        jScrollPane2=new JScrollPane(jTable2);
        jTable2.setBounds(0, 0, 459, 219);
        jScrollPane2.setBounds(new Rectangle(4, 365, 459, 219));
        this.setBounds(0, 0, 487, 750);
        getContentPane().add(jScrollPane2,null);
        jScrollPane2.setVisible(true);

        /* En las siguientes líneas se activa el método mouseClicked del objeto JTable
        para visualizar los datos del registro seleccionado en el formulario superior.
        */
        
        } else {
                JOptionPane.showConfirmDialog(this,"Los codigos introducidos no son correctos, no existen.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
            }
            }catch (SQLException e){
            
            }
        }
    }

    private void mostrarEntreCodigo() {
        /* La siguiente línea se utiliza para descargar el contenido del objeto de
        la memoria. De esta forma, si se pulsa varias veces este botón, el objeto
        es refrescado.
        */
        jScrollPane2.setVisible(false);
        jPanel1.setVisible(false);
        String st=JOptionPane.showInputDialog("Introduce los dos codigos separados por un espacio.");
        if (!st.matches("[a-zA-Z_0-9]{5} [a-zA-Z_0-9]{5}")) {
            JOptionPane.showConfirmDialog(this,"Para realizar una consulta entre códigos, debe rellenar el campo con los dos codigos separados por un espacio en blanco.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
        } else {
            String [] cods=st.split(" ");
            try{
            if (GestionDeAlmacen.existe(cods[0], "Articulos") && GestionDeAlmacen.existe(cods[1], "Articulos")) {
                DefaultTableModel modelo = new DefaultTableModel();
        JTable jTable2 = new JTable(modelo){
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Stock");
        modelo.addColumn("Stock mínimo");
        modelo.addColumn("Precio compra");
        modelo.addColumn("Precio venta");
        try {
            ResultSet rs=GestionDeAlmacen.mostrarEspec("SELECT * from Articulos WHERE cast(codigo as integer) >=" + Integer.valueOf(cods[0]) + "AND  cast(codigo as integer)  <=" + Integer.valueOf(cods[1]) + " order by codigo");
            while (rs.next()){               
                        Object [] fila = new Object[6];
                        fila[0] = rs.getString("codigo");
                        fila[1] = rs.getString("descripción");
                        fila[2] = rs.getString("stock");
                        fila[3] = rs.getString("stock_mínimo");
                        fila[4] = rs.getString("precio_compra");
                        fila[5] = rs.getString("precio_venta");
                        modelo.addRow ( fila );
            }
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
         // Añade una fila al final
       /*
        
        // En las siguientes líneas se deshabilita la edición del objeto JTable.
        jTable2=new JTable(vArticulos,vTitColum) {
        @Override
        public boolean isCellEditable(int row, int column) {
        return false;
        }
        };*/

        /* El método setSelectionMode recibe un entero que define el tipo
        de selección:

        0 -> Sólo se puede seleccionar una fila.
        1 -> Se pueden seleccionar múltiples filas consecutivas.
        2 -> Se pueden seleccionar múltiples filas aunque no sean
        consecutivas.

        */

        jTable2.setSelectionMode(0);
        jScrollPane2=new JScrollPane(jTable2);
        jTable2.setBounds(0, 0, 459, 219);
        jScrollPane2.setBounds(new Rectangle(4, 365, 459, 219));
        this.setBounds(0, 0, 487, 750);
        getContentPane().add(jScrollPane2,null);
        jScrollPane2.setVisible(true);

        /* En las siguientes líneas se activa el método mouseClicked del objeto JTable
        para visualizar los datos del registro seleccionado en el formulario superior.
        */
            } else {
                JOptionPane.showConfirmDialog(this,"Los codigos introducidos no son correctos, no existen.", "Gestión de articulos", JOptionPane.ERROR_MESSAGE);
            }
            }catch (SQLException e){
            
            }
                    }
        
        
    
        
    }
}
